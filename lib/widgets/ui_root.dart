// Generated by Dart Safe Data Class Generator. * Change this header on extension settings *
// ignore_for_file: avoid_dynamic_calls, lines_longer_than_80_chars
import 'package:flutter/material.dart';
import 'package:nested/nested.dart';

@immutable
class Ui extends SingleChildStatelessWidget {
  const Ui({
    super.key,
    this.children = const [],
    this.child,
  }) : super(child: child);

  final List<SingleChildWidget> children;
  final Widget? child;

  /// The default curve for all [Ui] widgets.
  static Curve defaultCurve = Curves.linear;

  @override
  Widget buildWithChild(BuildContext context, Widget? child) {
    if (children.isEmpty) {
      return child ?? const _Ui();
    }
    return Nested(children: children, child: child);
  }
}

/// A widget that does nothing.
class _Ui extends Widget {
  const _Ui();

  @override
  Element createElement() => _UiElement(this);
}

class _UiElement extends Element {
  _UiElement(super.widget);

  @override
  bool get debugDoingBuild => false;

  @override
  // ignore: must_call_super
  void performRebuild() {}
}

class UiOld extends StatefulWidget {
  const UiOld({
    super.key,
    this.initialBoolean = false,
    this.initialNumber = 0.0,
    this.initialColor = Colors.transparent,
    this.child = const SizedBox.shrink(),
    this.wrapper,
    this.builder,
    this.duration,
    this.curve,
  });

  final Widget Function(BuildContext context, Widget child)? wrapper;
  final Widget Function(BuildContext context, UiOldState state)? builder;
  final Widget child;
  final double initialNumber;
  final bool initialBoolean;
  final Color initialColor;
  final Duration? duration;
  final Curve? curve;

  const UiOld.builder(
    this.builder, {
    super.key,
    this.initialBoolean = false,
    this.initialNumber = 0.0,
    this.initialColor = Colors.transparent,
    this.child = const SizedBox.shrink(),
    this.wrapper,
    this.duration,
    this.curve,
  });

  @override
  State<UiOld> createState() => UiOldState();
}

class UiOldState extends State<UiOld> {
  late var _color = widget.initialColor;
  late var _bool = widget.initialBoolean;
  late var _number = widget.initialNumber;

  Color get color => _color;
  double get number => _number;
  bool get boolean => _bool;

  Widget get child => widget.child;

  set boolean(bool value) {
    setState(() => _bool = value);
  }

  set number(double value) {
    setState(() => _number = value);
  }

  set color(Color value) {
    setState(() => _color = value);
  }

  void toggle() {
    setState(() => _bool = !_bool);
  }

  void increment() {
    setState(() => _number++);
  }

  void decrement() {
    setState(() => _number--);
  }

  void reset() {
    setState(() {
      _bool = widget.initialBoolean;
      _number = widget.initialNumber;
      _color = widget.initialColor;
    });
  }

  @override
  Widget build(BuildContext context) {
    var child = widget.child;

    if (widget.builder != null) {
      child = widget.builder!(context, this);
    }
    return widget.wrapper?.call(context, child) ?? child;
  }
}
